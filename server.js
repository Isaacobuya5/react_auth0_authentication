const express = require("express");
const jwt = require("express-jwt"); // Validates JWT and sets req.user
const jwksRsa = require("jwks-rsa"); //Retrieve RSA keys from a JSON Web Key Set(JWKS) endpont.

require("dotenv").config();

const app = express();

// validates that the information contained in the JWT is valid and that it was generated by Auth0
const checkJwt = jwt({
    // Dynamically provide a signing key based on the kid  in the header
    // and the signing keys provided by the JWKS endpoint
    secret: jwksRsa.expressJwtSecret({
        cache: true, // cache the signing key
        rateLimit: true,
        jwksRequestsPerMinute: 5, // prevent attakers from requesting more than 5 per minute
        jwksUri: `https://${
            process.env.REACT_APP_AUTH0_DOMAIN
        }/.well-known/jwks.json`
    }),

    // validate the audience and the issuer
    audience: process.env.REACT_APP_AUTH0_AUDIENCE,
    issuer: `https://${process.env.REACT_APP_AUTH0_DOMAIN}/`,

    // This must match the algorithm selected in the Auth0 dashboard under your app's advanced settings under the OAuth0 tab.
    algorithms: ["RS256"]
});

// first route - public API
app.get("/public", (req, res) => {
    res.json({
        message: "Hello from A public API!"
    });
});

// second route - private API
// check for JWT before request is fulfilled
app.get("/private", checkJwt, (req, res) => {
    res.json({
        message: "Hello from A private API!"
    });
});

app.listen(3001);